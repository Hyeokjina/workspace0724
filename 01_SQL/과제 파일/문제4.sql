--1.계열 정보를 저장할 카테고리 테이블을 만들려고한다. 다음과 같은 테이블을 작성하시오
CREATE TABLE TB_CATAGORY(
    NAME VARCHAR2(10),
    USE_YN CHAR(1) DEFAULT 'Y'
);

--2. 과목을 구분을 저장할 테이블을 만들어라
CREATE TABLE TB_CLASS_TYPE(
    NO VARCHAR2(5) CONSTRAINT NO_PK PRIMARY KEY,
    NAME VARCHAR2(10)
);

--3.TB)CATAGORY 테이블의 NAME 컬럼에 PRIMARY KEY를 생성
ALTER TABLE TB_CATAGORY ADD CONSTRAINT NAME_PK PRIMARY KEY(NAME);

--4.TB_CLASS_TYPE 테이블의 NAME 컬럼에 NULL  값이 들어가지 않도록 속성을 변경
ALTER TABLE TB_CLASS_TYPE MODIFY NAME NOT NULL;

ALTER TABLE TB_CLASS_TYPE
RENAME CONSTRAINT SYS_C008818 TO NAME_NN;

--5.두 테이블에서 컬럼 명이 NO 인 것은 기존 타입을 유지하면서 크기는 10으로, 컬럼명이 NAME
-- 인 것은 마찬가지로 기존 타입을 유지하면서 크기 20으로 변경
ALTER TABLE TB_CLASS_TYPE
MODIFY NO VARCHAR2(10);

--6.두 테이블의 NO 컬럼과 NAME 컬럼의 이름 각 각 TB_를 제외한 테이블 이름이 앞에 붙은 형태로 변경한다.
ALTER TABLE TB_CATAGORY RENAME COLUMN NAME TO CATAGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN CLASS_TYPE_NAME TO CLASS_TYPE_NO;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NO TO CLASS_TYPE_NAME;

--7.TB_CATAGORY 테이블과 TB_CLASS_TYPE 테이블의 PRIMARY KEY 이름을 변경하라
ALTER TABLE TB_CATAGORY RENAME CONSTRAINT NAME_PK TO PK_NAME;

--8. 다음과 같은 INSERT 추가
INSERT INTO TB_CATAGORY
VALUES ('공학','Y');
INSERT INTO TB_CATAGORY
VALUES ('자연과학','Y');
INSERT INTO TB_CATAGORY
VALUES ('의학','Y');
INSERT INTO TB_CATAGORY
VALUES ('예체능','Y');
INSERT INTO TB_CATAGORY
VALUES ('인문사회','Y');

--9.TB_DEPARTMEN의 CATAGORY 컬럼이 TB_CATEGROY 테이블의 CATEGORY_NAME 컬럼을 부모값으로 
--참조하도록 FOREIGN KEY 를 지정해라 
ALTER TABLE TB_DEPARTMENT ADD CONSTRAINT FK_DPARTMENT_CATEGORY FOREIGN KEY (CATEGORY)
        REFERENCES TB_CATAGORY (CATAGORY_NAME);

--10. 춘 기술대학교 학생들의 정보만이 포함되어 있는 학생일반정보 VIEW를 만들고자 한다.
CREATE VIEW vw_학생일반정보
AS (SELECT STUDENT_NO,STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT)
;

--11.춘 기술대학교는 1년에 두번씩 학과 별로 학생과 지도교수가 지도 면담을 진행한다. 이를 사용할
--학생이름, 학과이름, 담당 교수이름으로 구성된 VIEW를 만들어라
CREATE VIEW vw_지도면담
AS (SELECT STUDENT_NAME, DEPARTMENT_NAME,PROFESSOR_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO=PROFESSOR_NO)
);

--12. 모든 학과에 학과별 학생수 를 확인하는 VIEW
CREATE VIEW vw_학과별학생수
AS (SELECT DEPARTMENT_NAME, COUNT(*) AS "STUDENT_COUNT"
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
GROUP BY DEPARTMENT_NAME
);

--13.생성된 학생일반정보 VIEW를 통해서 학번이 A23046인 학생의 이름을 본인 이름으로 변경하는 SQL문 만들어라
UPDATE VW_학생일반정보
SET STUDENT_NAME = '본인이름'
WHERE STUDENT_NO = 'A213046';

SELECT STUDENT_NAME
FROM VW_학생일반정보
WHERE STUDENT_NO = 'A213046';

--14.13번에서와 같이 VIEW를 통해서 데이터가 변경될수 있는 상황을 막으려면 VIEW를 어떻게 생성해야 하는가?
--WITH READ ONLY를 사용한다.

--15.최근 3년을 기준으로 수강인원이 가장 많았던 3과목을 찾는 구문
SELECT CLASS_NO, CLASS_NAME, COUNT(*)
FROM TB_GRADE
JOIN TB_CLASS USING (CLASS_NO)
WHERE SUBSTR(TERM_NO, 1, 4) >= 2007
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY COUNT(*) DESC
FETCH FIRST 3 ROWS ONLY;



